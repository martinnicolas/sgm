<div style="height: 500px; position:relative;">
<div id='map-edit'>
</div>
<button id='boton' class='btn btn-primary'>Limpiar mapa</button>
</div>

<br/>

<%= form_for(@rutum, html: { class: "form-horizontal", role: "form" }) do |f| %>
  <% if @rutum.errors.any? %>
    <div class="alert alert-danger alert-dismissable" role="alert">
      <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
      <h4><%= pluralize(@rutum.errors.count, "error") %> prohibited this rutum from being saved:</h4>
      <ul>
      <% @rutum.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <%= f.label :nombre, class: "col-sm-1 control-label" %>
    <div class="col-sm-4">
      <%= f.text_field :nombre, class: "form-control" %>
    </div>
  </div>
  <div class="form-group">
    <div class="col-sm-offset-1 col-sm-10">
      <%= f.submit value: "Guardar", class: "btn btn-primary" %>
    </div>
  </div>
<% end %>

<script>
  $(document).on('page:load', function() {    
    L.mapbox.accessToken = 'pk.eyJ1IjoibWFydGluY2hvIiwiYSI6ImZlMTY1MzUwMjQ5MGQ3YjgyY2NkYTU2MzJiZWIyMWRiIn0.Yhwbui6KvzC0JziPkwWXuQ';
    var map = L.mapbox.map('map-edit', 'martincho.nb477913')
    map.on('click', function(e) {
        // Let's add a callback to makeMarker so that it can draw the route only
        // *after* it's done processing the marker adding.
        makeMarker(e, drawRoute);
    });
    var waypoints = [];
    var polyline = L.polyline([]).addTo(map);
    function makeMarker(e, done) {
        var marker = L.marker(e.latlng, { draggable: true }).addTo(map);
        marker.on('dragend', drawRoute);
        waypoints.push(marker);
        return done();
    }
    function drawRoute() {
        if (waypoints.length < 2) return;
        // Directions API request looks like
        // http://api.tiles.mapbox.com/v4/directions/mapbox.driving/
        //    -122.42,37.78;-77.03,38.91.json?access_token={access_token}
        // We'll construct this using latlngs from the markers in waypoints.
        var points = waypoints.map(function(marker) {
            var latlng = marker._latlng;
            return [latlng.lng, latlng.lat].join(',');
        }).join(';');
        var directionsUrl = 'https://api.tiles.mapbox.com/v4/directions/mapbox.driving/' +
        points + '.json?access_token=' + L.mapbox.accessToken;
        $.get(directionsUrl, function(data) {
            // Do something with the directions returned from the API.
            var route = data.routes[0].geometry.coordinates;
            route = route.map(function(point) {
                // Turns out if we zoom out we see that the lat/lngs are flipped,
                // which is why it didn't look like they were being added to the
                // map. We can invert them here before drawing.
                return [point[1], point[0]];
            });
            polyline.setLatLngs(route);
        }); 
        var ruta = points;
        $.post('/ruta/store_route',ruta);        
        console.log(points);        
    }

    // Wait until the markers are loaded, so we know that `map.featureLayer.eachLayer`
    // will actually go over each marker.
    map.featureLayer.on('ready', function(e) {
      document.getElementById('boton').onclick = clickButton;
    });

    function clickButton() {
      map.featureLayer.eachLayer(function(marker) {
        // You can replace this test for anything else, to choose the right
        // marker on which to open a popup. by default, popups are exclusive
        // so opening a new one will close all of the others.
        if (confirm("Esta seguro que desea continuar?"))
          alert("TODO: Remove all markers");
      });
    }
  });
</script>